# {{ ansible_managed }}

{% set system_user = item.value.system_user | default(neutron_system_user_name) %}
{% set system_group = item.value.system_group | default(neutron_system_group_name) %}
{% set service_home = item.value.system_home | default(neutron_system_home_folder) %}
{% set program_name = item.value.program_binary | default(item.value.service_name) %}
{% set program_override = item.value.program_override | default("") %}
{% set program_config_options = item.value.config_options | default("") %}

description "{{ program_name }}"
author "Kevin Carter <kevin.carter@rackspace.com>"

start on runlevel [2345]
stop on runlevel [016]

respawn
respawn limit 10 5

# Set the RUNBIN environment variable
{% if program_override == "" %}
env RUNBIN="{{ neutron_bin }}/{{ program_name }}"
{% else %}
env RUNBIN="{{ program_override }}"
{% endif %}

# Change directory to service users home
chdir "{{ service_home }}"

# Pre start actions
pre-start script
  mkdir -p "/var/run/{{ program_name }}"
  chown {{ system_user }}:{{ system_group }} "/var/run/{{ program_name }}"

  mkdir -p "/var/lock/{{ program_name }}"
  chown {{ system_user }}:{{ system_group }} "/var/lock/{{ program_name }}"

  . {{ neutron_bin }}/activate


end script

# Post stop actions
post-stop script
  rm "/var/run/{{ program_name }}/{{ program_name }}.pid"
end script

# Run the start up job
exec start-stop-daemon --start \
                       --chuid {{ system_user }} \
                       --make-pidfile \
                       --pidfile /var/run/{{ program_name }}/{{ program_name }}.pid \
                       --exec $RUNBIN \
                       -- {{ program_config_options }}
